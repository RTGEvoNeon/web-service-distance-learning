<html>
<title>Система дистанционного обучения кафедры </title>
<head bodycolor="000011">
 <link rel="stylesheet" type="text/css" href="../../css/style.css">
 <link rel="stylesheet" type="text/css" href="../../css/abc.css">
        <body BACKGROUND="../../image/background.PNG">
		<br><br>
		<?php
include "../../common/verch.php";
                                   
?>
<a name="33333"></a>
<h1 style="margin-bottom: 10px; color: #445C4C">Лекции по теме: PHP<h1>
<table align="center" cellspacing="0" cellpadding="0" border="0">
	<tr>
		<td colspan="2" align="center">
			<ul class="tab">
			<li><a href="php1.php"><span>Лекция № 1</span></a></li>
			<li><a href="php2.php"><span>Лекция № 2</span></a></li>
			<li><a href="php3.php"><span>Лекция № 3</span></a></li>
			<li><a href="php4.php"><span>Лекция № 4</span></a></li>
		</td>
	</tr>
</table>


<table align="justify" width="900" cellspacing="2" cellpadding="2" border="0" bgcolor="white">
<tr>
<td colspan="2" align="center"><br>

<strong><h2>Лекция № 1</h2> </strong><br><br><hr><br><br>


<p> <div align="left" align="justify">&nbsp;&nbsp;&nbsp;&nbsp;


<H3>Что такое PHP?</A></H3><P>PHP (рекурсивный акроним для "PHP: Hypertext
Preprocessor") это широко распространённый Открытый ресурс - язык скриптинга 
(сценариев) общего назначения, который создан специально для Web и который можно внедрять в HTML.</P>
<P>Простой ответ, но что это означает? Вот пример:<br><br>
<TABLE WIDTH="100%" BORDER="0"><TR><TD><A NAME="AEN70"></A><P><B>Пример 1. Вводный пример</B></P>
<TABLE BORDER="0" BGCOLOR="#E0E0E0" CELLPADDING="5"><TR><TD><PRE>&#60;html&#62;
    &#60;head&#62;

        &#60;title&#62;Пример&#60;/title&#62;
    &#60;/head&#62;
    &#60;body&#62;

        &#60;?php 
        echo "Hi, I'm a PHP script!"; 
        ?&#62;

    &#60;/body&#62;

&#60;/html&#62;</PRE></TD></TR></TABLE></TD></TR></TABLE></P><br>
<P>Заметьте, как это отличается от скриптов, написанных на языках Perl или C - 
вместо написания программы с большим количеством команд для вывода HTML, вы 
пишете HTML-скрипт с некоторым количеством встроенного кода для выполнения 
каких-либо действий (в данном случае - для вывода некоторого текста). Код PHP заключён в специальные
начальный и конечный тэги, что позволяет вам входить в и выходить из "режима PHP".</P>
<P>PHP отличается от других подобных языков, типа клиентского JavaScript, тем, 
что код выполняется на сервере. Если вы имеете скрипт, аналогичный 
вышеприведённому на сервере, то клиент получит результат работы этого 
скрипта, не имея возможности определить, каков был исходный код. Вы также 
можете сконфигурировать ваш web-сервер таким образом, чтобы он обрабатывал 
все ваши HTML-файлы с помощью PHP, и реально пользователь не будет иметь 
способа определить, что у вас &quot;в рукаве&quot;.</P>
<P>Наилучшим качеством PHP является то, что он предельно прост для новичка в 
программировании, но предлагает много продвинутых возможностей для 
программиста-профессионала. Не пугайтесь, увидев длинный список возможностей 
PHP. Вы скоро освоитесь и через несколько часов начнёте писать код.</P>
<P>Хотя разработка на PHP сконцентрирована вокруг серверного скриптинга,
вы можете сделать с помощью РНР ещё много чего.
<br><br><P>Когда PHP разбирает файл, он просто передаёт текст файла, пока не обнаружит 
один из специальных тэгов, который говорит о необходимости начать 
интерпретацию текста как кода PHP. Разборщик выполняет весь найденный код 
до закрывающего тэга PHP, который говорит разборщику, что нужно снова 
начать просто передавать текст. Этот механизм позволяет внедрять PHP-код в HTML: 
всё за пределами тэгов PHP остаётся без изменений, а внутри тэгов - разбирается как код.</P>
<P>Имеются четыре набора тэгов, которые используются для обозначения блоков кода PHP.<br>
Только два из них (&#60;?php. . .?&#62; и &#60;script
language="php"&#62;. . .&#60;/script&#62;) всегда доступны; другие можно 
включать и отключать из файла конфигурации <TT>php.ini</TT>. Хотя сокращённые тэги и тэги в стиле ASP могут быть удобны, они не так 
переносимы, как их длинные версии. Также, если вы предполагаете внедрять
PHP-код в XML или XHTML, нужно использовать форму &#60;?php. . .?&#62; для соответствия XML.</P>

<P>Тэги, поддерживаемые PHP:</P><TABLE WIDTH="100%" BORDER="0"><TR><TD><br><br>
<A NAME="AEN3361"></A><h5>Пример 2. Способы выхода из HTML</h5><br>
<TABLE BORDER="0" BGCOLOR="#E0E0E0" CELLPADDING="5"><TR><TD>
<PRE>1.  &#60;?php echo("если вы хотите работать с документами XHTML или XML, делайте так\n"); ?&#62;

2.  &#60;? echo ("это простейшая SGML-инструкция процессинга\n"); ?&#62;
    &#60;?= выражение ?&#62; Это аббревиатура для "&#60;? echo выражение ?&#62;"
    
3.  &#60;script language="php"&#62;

        echo ("некоторые редакторы (вроде FrontPage) не любят
              инструкции процессинга");
    &#60;/script&#62;

4.  &#60;% echo ("Вы можете по выбору использовать тэги в стиле ASP"); %&#62;
    &#60;%= $variable; # Это аббревиатура для "&#60;% echo . . ." %&#62;</PRE></TD></TR></TABLE></TD></TR></TABLE><br>
<P>Первый способ, &#60;?php. . .?&#62;, это предпочтительный метод, так как он 
позволяет использовать PHP в коде, соответствующем правилам XML, таком как XHTML.</P>
<P>Второй способ вообще невозможен. Сокращённые тэги доступны только тогда, 
когда они подключены. Это можно сделать функцией <B>short_tags()</B> (только в PHP 3), включив
установку конфигурации <A HREF="configuration.html#ini.short-open-tag">short_open_tag</A> в PHP
config-файле, или скомпилировав PHP с опцией --enable-short-tags в <B>configure</B>. Даже если вы по
умолчанию включили в php.ini-dist, использование сокращённых тэгов не рекомендуется.</P>

<P>Четвёртый способ доступен, только если тэги в стиле ASP включены с 
использованием установки конфигурации <A HREF="configuration.html#ini.asp-tags">asp_tags</A>.<br>
<BLOCKQUOTE><P><B>Примечание: </B>поддержка тэгов ASP-стиля была введена в версии 3.0.4.</P></BLOCKQUOTE><br>
<BLOCKQUOTE><P><B>Примечание: </B>
  использование сокращённых тэгов должно быть исключено при разработке 
приложений или библиотек, предназначенных для распространения или при публикации на
PHP-серверы, которые вами не контролируются, поскольку сокращённые тэги
могут не поддерживаться на целевом сервере.  Для обеспечения 
переносимости и распространения кода не используйте сокращённые тэги.</P></BLOCKQUOTE>
<P>Закрывающий тэг блока будет иметь следом за собой ведомый символ newline, 
если он имеется. Также закрывающий тэг автоматически подразумевает точку с 
запятой; вам не нужно также вводить символ &quot;точка с запятой&quot; в конце последней строки PHP-блока.</P>
<P>PHP позволяет использовать структуры такого вида:<TABLE WIDTH="100%" BORDER="0"><TR><TD><br>

<A NAME="AEN3377"></A><h5>Пример 3. Advanced escaping/продвинутая замена</h5>
<TABLE BORDER="0" BGCOLOR="#E0E0E0" CELLPADDING="5"><TR><TD><PRE>&#60;?php
if ($expression) { 
    ?&#62;
    &#60;strong&#62;Это правильно.&#60;/strong&#62;
    &#60;?php 
} else { 
    ?&#62;
    &#60;strong&#62;Это неправильно.&#60;/strong&#62;

    &#60;?php 
}
?&#62;</PRE></TD></TR></TABLE></TD></TR></TABLE>
<p>Этот код работает так, как ожидается, поскольку, когда PHP встречает 
закрывающие тэги ?&#62;, он просто начинает выводить всё, что обнаруживает 
после них, до обнаружения другого открывающего тэга.

<br><br><hr><br><center>
<br><a class="a1" href="#33333">Наверх</a><br>
<br>
</td>
</tr>
</table>
	                  
        </body>     
  
</html>
